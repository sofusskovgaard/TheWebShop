@page
@using TheWebShop.Common.Filters.Product
@model IndexModel

@{
    ViewData["Title"] = "Products";
}
<form>
    <div class="row">
        <div class="col-md-3">

            <div class="d-flex flex-column position-sticky" style="top: 1rem">

                @await Html.PartialAsync("Partials/SearchFilter")

                @await Html.PartialAsync("Partials/BrandFilter")

                @await Html.PartialAsync("Partials/CategoryFilter")

                @await Html.PartialAsync("Partials/PriceFilter")

                @await Html.PartialAsync("Partials/RatingFilter")

                @await Html.PartialAsync("Partials/ExtraFilters")

                <button type="submit" class="btn btn-light btn-block mt-3">Set filters</button>
                <a class="btn btn-light btn-block mt-3" asp-page="">Reset filters</a>

            </div>

        </div>

        <div class="col-md-9">

            <div class="d-flex align-items-center mb-3">
                <div class="form-group m-0">
                    <select class="custom-select" asp-for="@Model.Filter.OrderBy" asp-items="Html.GetEnumSelectList<ProductOrderBy>()" onchange="this.form.submit()"></select>
                </div>

                <div class="d-flex align-items-center ml-auto">
                    <small class="mr-3 text-muted">Total results: @Model.TotalResults</small>
                    <input type="hidden" asp-for="@Model.p"/>
                    <div class="form-group m-0">
                        <select class="custom-select" asp-for="@Model.ps" onchange="this.form.submit()">
                            <option value="12">12</option>
                            <option value="24">24</option>
                            <option value="48">48</option>
                            <option value="0">Alle</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="mb-3" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr)); grid-gap: 1rem;">

                @foreach (var item in Model.Products)
                {
                    @await Html.PartialAsync("Shared/Partials/ProductCard", item)
                }

            </div>

            @if (Model.ps > 0 && Model.TotalResults > Model.ps)
            {
                @await Html.PartialAsync("Shared/Partials/Pagination", Model)
            }

        </div>
    </div>
</form>